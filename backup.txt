	
	--ensure that the grid rolls (VERTICALS)
	if( dx > 0 )then
		-- check if one grid needs to be added
		local replacer = {}
		local nrr = 0
		local minDist  = display.contentWidth
		local minVpos  = 0
		for i = 1, #verticals do
			if verticals[i].x < minDist then
				minDist = verticals[i].x
				minVpos = verticals[i].Tfield.text
			end
			if verticals[i].x > display.contentWidth then
				replacer[nrr+1] = i
				nrr = nrr+1
			end
		end
		if(minDist > boxSize) then
			local lim = minDist/boxSize
			for i = 1,lim do
				minVpos = minVpos - boxSize
				if #replacer >= i then
					verticals[replacer[i]].Tfield.text = minVpos
					verticals[replacer[i]].x = minDist - boxSize
					verticals[replacer[i]].Tfield.x = verticals[replacer[i]].x
				else
					AddOneVertical( minDist - boxSize , minVpos )
					print("Camera move has added a new vertical")
				end
				minDist = minDist - boxSize
			end
		end
	elseif dx < 0 then
		local replacer = {}
		local nrr = 0
		local minDist  = display.contentWidth
		local minVpos  = 0
		for i = 1, #verticals do
			if (display.contentWidth - verticals[i].x) < minDist then
				minDist = (display.contentWidth - verticals[i].x)
				minVpos = verticals[i].Tfield.text
			end
			if verticals[i].x < 0 then
				replacer[nrr+1] = i
				nrr = nrr+1
			end
		end
		if minDist > boxSize then
			local lim = minDist/boxSize
			for i = 1,lim do
				minVpos = minVpos + boxSize
				if #replacer >= i then
					verticals[replacer[i]].Tfield.text = minVpos
					verticals[replacer[i]].x = display.contentWidth - minDist + boxSize
					verticals[replacer[i]].Tfield.x = verticals[replacer[i]].x
				else
					print("Camera move has added a new vertical")
					AddOneVertical( display.contentWidth - minDist + boxSize , minVpos )
				end
			end
			minDist = minDist + boxSize
		end
	end
	--ensure that the grid rolls (HORIZONTALS)
	if( dy > 0 )then  -- proof
		-- check if one grid needs to be added
		local replacer = {}
		local nrr = 0
		local minDist  = display.contentHeight
		local minVpos  = 0
		for i = 1, #horizontals do
			if horizontals[i].y < minDist then
				minDist = horizontals[i].y
				minVpos = horizontals[i].Tfield.text
			end
			if horizontals[i].y > display.contentHeight then
				replacer[nrr+1] = i
				nrr = nrr+1
			end
		end
		if(minDist > boxSize) then
			local lim = minDist/boxSize
			for i = 1,lim do
				minVpos = minVpos - boxSize
				if #replacer >= i then
					horizontals[replacer[i]].Tfield.text = minVpos
					horizontals[replacer[i]].y = minDist - boxSize
					horizontals[replacer[i]].Tfield.y = horizontals[replacer[i]].y
				else
					AddOneHorizontal( minDist - boxSize , minVpos )
					print("Camera move has added a new horizontal dy,",dy)
				end
				minDist = minDist - boxSize
			end
		end
	elseif dy < 0 then
		local replacer = {}
		local nrr = 0
		local minDist  = display.contentHeight
		local minVpos  = 0
		for i = 1, #horizontals do
			if (display.contentHeight - horizontals[i].y) < minDist then
				minDist = (display.contentHeight - horizontals[i].y)
				minVpos = horizontals[i].Tfield.text
			end
			if horizontals[i].y < 0 then
				replacer[nrr+1] = i
				nrr = nrr+1
			end
		end
		if minDist > boxSize then
			local lim = minDist/boxSize
			for i = 1,lim do
				minVpos = minVpos + boxSize
				if #replacer > i then
					horizontals[replacer[i]].Tfield.text = minVpos
					horizontals[replacer[i]].y = display.contentHeight - minDist + boxSize
					horizontals[replacer[i]].Tfield.y = horizontals[replacer[i]].y
				else
					print("Camera move has added a new vertical DY",dy)
					AddOneHorizontal( display.contentHeight - minDist + boxSize , minVpos )
				end
				minDist = minDist + boxSize
			end
		end
	end